{"ast":null,"code":"var _jsxFileName = \"/home/logan/code/projects/phase-3/zest/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Banner from './components/Banner';\nimport SortSearchBar from './components/SortSearchBar';\nimport CardContainer from './components/CardContainer';\nimport { Route, Switch } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  let featuredRecipe = {\n    id: null,\n    name: '',\n    picture_url: '',\n    cuisine: '',\n    directions: [],\n    ingredients: []\n  }; // const [ featuredRecipe, setFeaturedRecipe ] = useState({\n  //       id: null,\n  //       name: '',\n  //       picture_url: '',\n  //       cuisine: '',\n  //       directions: [],\n  //       ingredients: []\n  //   })\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/recipes\").then(r => r.json()).then(recipes => setRecipes(recipes));\n  }, []);\n  useEffect(() => {\n    if (recipes.length !== 0) {\n      featuredRecipe = recipes[Math.floor(Math.random() * recipes.length)];\n    }\n  }, [recipes]);\n\n  function onDelete(recipeToDeleteId) {\n    setRecipes(recipes.filter(recipe => recipe.id !== recipeToDeleteId));\n  }\n\n  function updateRecipes(updatedRecipe) {\n    const updatedArr = recipes.map(recipe => {\n      if (recipe.id === updatedRecipe.id) {\n        return updatedRecipe;\n      } else {\n        return recipe;\n      }\n    });\n    console.log(\"Updated Array: \", updatedArr);\n    setRecipes(updatedArr);\n  }\n\n  console.log('App: ', recipes);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/recipes\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortSearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n        recipes: recipes,\n        onDelete: onDelete,\n        updateRecipes: updateRecipes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Banner, {\n        featuredRecipe: featuredRecipe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oMXGrycDNmY8VI8EOWAT0d1o4is=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/logan/code/projects/phase-3/zest/src/App.js"],"names":["Header","Banner","SortSearchBar","CardContainer","Route","Switch","useState","useEffect","App","recipes","setRecipes","featuredRecipe","id","name","picture_url","cuisine","directions","ingredients","fetch","then","r","json","length","Math","floor","random","onDelete","recipeToDeleteId","filter","recipe","updateRecipes","updatedRecipe","updatedArr","map","console","log"],"mappings":"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","sourcesContent":["import Header from './components/Header';\nimport Banner from './components/Banner';\nimport SortSearchBar from './components/SortSearchBar';\nimport CardContainer from './components/CardContainer';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [ recipes, setRecipes ] = useState([]);\n  let featuredRecipe = {\n        id: null,\n        name: '',\n        picture_url: '',\n        cuisine: '',\n        directions: [],\n        ingredients: []\n    }\n  // const [ featuredRecipe, setFeaturedRecipe ] = useState({\n  //       id: null,\n  //       name: '',\n  //       picture_url: '',\n  //       cuisine: '',\n  //       directions: [],\n  //       ingredients: []\n  //   })\n\n  useEffect(() => {\n  fetch(\"http://localhost:9292/recipes\")\n    .then((r) => r.json())\n    .then((recipes) => setRecipes(recipes));\n  }, []);\n\n  useEffect(() => {\n      if (recipes.length !== 0) {\n        featuredRecipe = recipes[Math.floor(Math.random() * recipes.length)]\n      }\n    }, [recipes]);\n\n  function onDelete(recipeToDeleteId) {\n    setRecipes(recipes.filter(recipe => recipe.id !== recipeToDeleteId));\n  }\n\n  function updateRecipes(updatedRecipe) {\n    const updatedArr = recipes.map(recipe => {\n      if (recipe.id === updatedRecipe.id) {\n        return updatedRecipe;\n      } else {\n        return recipe;\n      }\n    });\n    console.log(\"Updated Array: \", updatedArr)\n    setRecipes(updatedArr);\n  }\n\n  console.log('App: ', recipes)\n\n  return (\n    <Switch>\n      <Route exact path=\"/recipes\">\n        <Header />\n        <SortSearchBar />\n        <CardContainer recipes={recipes} onDelete={onDelete} updateRecipes={updateRecipes}/>\n      </Route>\n      <Route exact path=\"/\">\n        <Header />\n        <Banner featuredRecipe={featuredRecipe}/>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}